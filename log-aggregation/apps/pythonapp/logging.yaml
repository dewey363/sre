version: 1
disable_existing_loggers: true

formatters:
  default:
    format: "[%(asctime)s] %(levelname)s in %(module)s: %(message)s"
  error:
    format: "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers:
  console_handler:
    class: logging.StreamHandler
    level: DEBUG
    stream: ext://sys.stdout
    formatter: default
  debug_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    filename: !ENV ${LOG_DIR:./logs}/pythonapp.debug.log
    maxBytes: 1024
    backupCount: 3
    formatter: default
  info_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    filename: !ENV ${LOG_DIR:./logs}/pythonapp.log
    maxBytes: 1024
    backupCount: 3
    formatter: default
  warn_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: WARN
    filename: !ENV ${LOG_DIR:./logs}/pythonapp.warn.log
    maxBytes: 1024
    backupCount: 3
    formatter: default
  critical_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: CRITICAL
    filename: !ENV ${LOG_DIR:./logs}/pythonapp.critical.log
    maxBytes: 1024
    backupCount: 3
    formatter: error
  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    filename: !ENV ${LOG_DIR:./logs}/pythonapp.error.log
    maxBytes: 1024
    backupCount: 3
    formatter: error

root:
  level: INFO
  handlers:
    - console_handler
    - debug_file_handler
    - info_file_handler
    - warn_file_handler
    - critical_file_handler
    - error_file_handler
  propogate: yes
